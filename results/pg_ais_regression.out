-- Load the extension
CREATE EXTENSION IF NOT EXISTS pg_ais;
-- Regression test: clean table
DROP TABLE IF EXISTS test_ais;
NOTICE:  table "test_ais" does not exist, skipping
CREATE TABLE test_ais (id serial, sentence ais);
-- ✅ 1. Valid multi-part message (reassembled)
SELECT pg_ais_parse('!AIVDM,2,1,2,B,53aGowP000001@D;E@E=:qD00000,0*5C');
 pg_ais_parse 
--------------
 
(1 row)

SELECT pg_ais_parse('!AIVDM,2,2,2,B,00000000000,2*21');
                                            pg_ais_parse                                            
----------------------------------------------------------------------------------------------------
 {"lat": 42.123455, "lon": -70.654320, "mmsi": 123456789, "speed": 14.200000, "heading": 82.500000}
(1 row)

-- ✅ 2. Out-of-order message (discarded)
SELECT pg_ais_parse('!AIVDM,2,2,9,B,00000000000,2*27');  -- arrives second part first
 pg_ais_parse 
--------------
 
(1 row)

SELECT pg_ais_parse('!AIVDM,2,1,9,B,53aGowP000001@D;E@E=:qD00000,0*5C');
                                            pg_ais_parse                                            
----------------------------------------------------------------------------------------------------
 {"lat": 42.123455, "lon": -70.654320, "mmsi": 123456789, "speed": 14.200000, "heading": 82.500000}
(1 row)

-- ✅ 3. Incomplete message (only one part)
SELECT pg_ais_parse('!AIVDM,2,1,3,B,53aGowP000001@D;E@E=:qD00000,0*5C');
 pg_ais_parse 
--------------
 
(1 row)

-- Optionally reset fragment buffer
-- SELECT pg_ais_reset();
